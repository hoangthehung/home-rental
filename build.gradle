plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.liquibase.gradle' version '2.2.1'
    id "io.freefair.aspectj.post-compile-weaving" version "8.0.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    liquibaseRuntime.extendsFrom runtime
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/release" }
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}
ext {
    cucumberVersion = "7.16.1"
    jdbcH2DBVersion = "1.3.148"
    jsonwebtokenVersion= "0.12.5"
    mapstructVersion = "1.5.5.Final"
    commonsLangVersion = "3.14.0"
    lombokVersion = "1.18.32"
    aspectjVersion="1.9.22"
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.16.1'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime("ch.qos.logback:logback-core:1.2.3")
    liquibaseRuntime("ch.qos.logback:logback-classic:1.2.3")
    liquibaseRuntime 'org.postgresql:postgresql'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'

    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"

    runtimeOnly "org.aspectj:aspectjrt:${aspectjVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "io.cucumber:cucumber-java8:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-jvm:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
    testImplementation "com.h2database:h2:${jdbcH2DBVersion}"


}

tasks.named('test') {
    useJUnitPlatform()
}
//
//liquibase {
//    jvmArgs "-Duser.dir=$project.projectDir/reo"
//}
liquibase {
    jvmArgs "-Duser.dir=$project.projectDir"
    activities {
        main {
            changelogFile 'src/main/resources/db/mainCHangelog.xml'
            url 'jdbc:postgresql://localhost:5432/postgres'
            username 'postgres'
            password 'test'
            logLevel "info"
        }
    }
}